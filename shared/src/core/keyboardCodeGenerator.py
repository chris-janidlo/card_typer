#!/usr/bin/env python3

# generates states for Keyboard class. creates (or overwrites) file named Keyboard AutoGenerated.cs. Keyboard must remain a partial class

from string import ascii_uppercase
from itertools import chain
from sys import argv

special_keys = ['Space', 'Dash', 'Apostrophe', 'Backspace', 'Return']

header = r"""//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

"""

properties = ''
enumerator = '\tpublic IEnumerator<KeyState> GetEnumerator()\n\t{\n'

for key in chain(special_keys, ascii_uppercase):
	state_type = 'Deactivated' if key.upper() in map(str.upper, argv[1:]) else 'Active'
	state_name = f'{key}State'
	properties += f'\tprivate KeyState {state_name} = new KeyState {{ Key = KeyboardKey.{key}, Type = KeyStateType.{state_type} }};\n'
	enumerator += f'\t\tyield return {state_name};\n'

output = header + f'using System.Collections.Generic;\n\nnamespace CTShared\n{{\npublic partial class Keyboard : IEnumerable<KeyState>\n{{\n{properties}\n{enumerator}\t}}\n}}\n}}\n'

file = open('Keyboard AutoGenerated.cs', 'w')
file.write(output)
