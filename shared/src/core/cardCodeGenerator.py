#!/usr/bin/env python3

from sys import argv
import re

# generates dictionary for Card class. creates (or overwrites) file named Card (auto generated).cs. Card must remain a partial class

if len(argv) < 2:
	print('need the files to scan')
	quit()

classes = []

for name in argv[1:]:
	with open(name, 'r') as file:
		for line in file:
			match = re.match(r'.*class ([A-Za-z]+) : Card', line)
			if match is not None:
				classes.append(match.group(1))

pairs = ''

for name in classes:
	pairs += f'\t\t{{ "{name}", typeof({name}) }},\n'

pairs = pairs[:-2] # remove last newline and comma

output = f"""//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using CTShared.Cards;
using CTShared.Networking;

namespace CTShared
{{
public abstract partial class Card : Packet
{{
	private readonly static ImmutableDictionary<string, Type> namesToCards = new Dictionary<string, Type>
	{{
{pairs}
	}}.ToImmutableDictionary();
}}
}}
"""

file = open('Card (auto generated).cs', 'w')
file.write(output)
